{"version":3,"sources":["store/column.js","store/card.js","store/index.js","components/header.js","components/footer.js","components/card/card.js","components/modal/modal.js","components/column/column.js","components/board/board.js","app.js","index.js"],"names":["initialState","items","title","description","_id","column_id","priority","moveCard","item","type","payload","reducers","combineReducers","columnReducer","state","action","newItems","filter","updatedItems","map","cardReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","useStyles","makeStyles","theme","container","width","height","backgroundColor","margin","headerText","display","justifyContent","paddingTop","fontWeight","textShadow","fontSize","color","Board","classes","Container","className","Typography","variant","root","spacing","text","padding","size","placeholder","connect","tasks","data","dispatch","deleteCard","props","cardContainer","position","marginBottom","paddingBottom","rightArrow","bottom","right","leftArrow","left","overflow","High","Medium","Low","useState","moveButtons","setMoveButtons","modifyCard","direction","columnIds","column","index","indexOf","id","useEffect","length","loadButtons","Card","draggable","IconButton","onClick","CardContent","gutterBottom","sx","component","CardActions","Modal","open","setOpen","setTitle","setDescription","setPriority","handleClose","handleSubmit","Dialog","onClose","DialogContent","DialogContentText","innerText","DialogActions","TextField","required","onChange","e","target","value","options","InputLabel","FormControl","m","minWidth","Select","labelId","label","MenuItem","Button","autoFocus","buttonTitle","flexDirection","borderRadius","deleteButton","top","columnHeader","columnTitle","textAlign","minHeight","columnDescription","deleteColumn","addCard","newCardModalIsOpen","setNewCardModalIsOpen","cards","task","prompt","toLowerCase","removeColumn","startIcon","newCard","uuidv4","filteredTask","addColumn","modalIsActive","setModalIsActive","newColumn","App","Entry","document","getElementById","ReactDOM","render"],"mappings":"mNAAIA,EAAe,CACjBC,MAAO,CACL,CACEC,MAAO,gBACPC,YAAa,sCACbC,IAAK,6BAEP,CACEF,MAAO,gBACPC,YAAa,4CACbC,IAAK,0BA6BJ,ICvCHJ,EAAe,CACjBC,MAAO,CACL,CACEC,MAAO,kBACPC,YAAa,yCACbE,UAAW,4BACXD,IAAK,wBACLE,SAAU,QAEZ,CACEJ,MAAO,kBACPC,YAAa,yCACbE,UAAW,uBACXD,IAAK,oBACLE,SAAU,SA6BT,IAcMC,EAAW,SAACC,GACvB,MAAO,CACLC,KAAM,YACNC,QAASF,ICrDTG,EAAWC,0BAAgB,CAC7BC,cFOa,WAAsD,IAA/BC,EAA8B,uDAAtBd,EAAce,EAAQ,uCAC5DN,EAAkBM,EAAlBN,KAAMC,EAAYK,EAAZL,QAEZ,OAAQD,GACN,IAAK,aACH,MAAO,CACLR,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBS,KAG5B,IAAK,gBACH,IAAIM,EAAWF,EAAMb,MAAMgB,QAAO,SAACT,GAAD,OAAUA,EAAKJ,MAAQM,KACzD,OAAO,2BAAKI,GAAZ,IAAmBb,MAAOe,IAE5B,IAAK,gBACH,IAAIE,EAAeJ,EAAMb,MAAMkB,KAAI,SAACX,GAAD,OACjCA,EAAKJ,MAAQM,EAAQN,IAAOI,EAAOE,EAAW,QAEhD,OAAO,2BAAKI,GAAZ,IAAmBb,MAAOiB,IAE5B,QACE,OAAOJ,IE1BXM,YDUa,WAAoD,IAA/BN,EAA8B,uDAAtBd,EAAce,EAAQ,uCAC1DN,EAAkBM,EAAlBN,KAAMC,EAAYK,EAAZL,QAEZ,OAAQD,GACN,IAAK,WACH,MAAO,CACLR,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBS,KAG5B,IAAK,cACH,IAAIM,EAAWF,EAAMb,MAAMgB,QAAO,SAACT,GAAD,OAAUA,EAAKJ,MAAQM,KACzD,OAAO,2BAAKI,GAAZ,IAAmBb,MAAOe,IAE5B,IAAK,YACH,IAAIE,EAAeJ,EAAMb,MAAMkB,KAAI,SAACX,GAAD,OACjCA,EAAKJ,MAAQM,EAAQ,GAArB,2BAA+BF,GAA/B,IAAqCH,UAAWK,EAAQ,KAAOF,KAEjE,OAAO,2BAAKM,GAAZ,IAAmBb,MAAOiB,IAE5B,QACE,OAAOJ,MCxBEO,EAHNC,sBAAYX,EAAUY,8BAAoBC,0BAAgBC,O,kCCP7DC,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCC,UAAW,CACTC,MAAO,OACPC,OAAQ,IACRC,gBAAiB,OACjBC,OAAQ,UAEVC,WAAY,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,MACZC,WAAY,SACZC,WAAY,8BACZC,SAAU,GACVC,MAAO,eAII,SAASC,IACtB,IAAMC,EAAUjB,IAEhB,OACE,cAACkB,EAAA,EAAD,CAAWC,UAAWF,EAAQd,UAA9B,SACE,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWF,EAAQT,WAA5C,6BCxBN,IAAMR,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,KAAM,CACJ,QAAS,CACPf,OAAQL,EAAMqB,QAAQ,GACtBnB,MAAO,SAGXD,UAAW,CACTC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,QAEnBkB,KAAM,CACJC,QAAS,GACTC,KAAM,OACNX,MAAO,eAII,SAASC,IACtB,IAAMC,EAAUjB,IAEhB,OACE,cAACkB,EAAA,EAAD,CAAWC,UAAWF,EAAQd,UAA9B,SACE,cAACiB,EAAA,EAAD,CAAYD,UAAWF,EAAQO,KAAMG,YAAY,kBAAjD,oC,mHCuHN,IAUeC,eALS,SAACxC,GAAD,MAAY,CAClCyC,MAAOzC,EAAMM,YAAYnB,MACzBuD,KAAM1C,EAAMD,cAAcZ,UAPD,SAACwD,GAAD,MAAe,CACxClD,SAAU,SAACC,GAAD,OAAUiD,EAASlD,EAASC,KACtCkD,WAAY,SAAClD,GAAD,OAAUiD,EJnGf,CACLhD,KAAM,cACNC,QIiGwCF,QAQ7B8C,EA9If,SAAmBK,GACjB,IAAMjC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgC,cAAe,CACb5B,gBAAiB,wBACjBC,OAAQ,EACRkB,QAAS,EACTU,SAAU,WACVC,aAAc,GACdC,cAAe,IAEjBC,WAAY,CACVH,SAAU,WACVI,OAAQ,EACRC,MAAO,GAETC,UAAW,CACTN,SAAU,WACVI,OAAQ,EACRG,KAAM,GAERjE,YAAa,CACXkE,SAAU,UAEZC,KAAM,CACJ7B,MAAO,OAET8B,OAAQ,CACN9B,MAAO,UAET+B,IAAK,CACH/B,MAAO,aAIX,EAAsCgC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACMhC,EAAUjB,IAMVkD,EAAa,SAACC,GAClB,IAAIC,EAAYnB,EAAMH,KAAKrC,KAAI,SAAC4D,GAAD,OAAYA,EAAO3E,OAC9C4E,EAAQF,EAAUG,QAAQtB,EAAMtD,WAClB,UAAdwE,EAAuBlB,EAAMpD,SAAS,CAACoD,EAAMuB,GAAIJ,EAAUE,EAAQ,KAClErB,EAAMpD,SAAS,CAACoD,EAAMuB,GAAIJ,EAAUE,EAAQ,MAkBnD,OAJAG,qBAAU,YATU,WAClB,IAAIL,EAAYnB,EAAMH,KAAKrC,KAAI,SAAC4D,GAAD,OAAYA,EAAO3E,OAC9C4E,EAAQF,EAAUG,QAAQtB,EAAMtD,WACX,IAArByE,EAAUM,OAAqBT,EAAe,MACpC,IAAVK,GAAeF,EAAUM,OAAS,EAAUT,EAAe,KAC3DK,IAAUF,EAAUM,OAAS,EAAUT,EAAe,KACrDA,EAAe,KAIpBU,MAIA,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAM1C,UAAWF,EAAQiB,cAAesB,GAAIvB,EAAMuB,GAAlE,UACE,cAACM,EAAA,EAAD,CACEC,QAAS,WA7BI,IAACP,IA8BDvB,EAAMuB,GA7BvBvB,EAAMD,WAAWwB,IA+Bb9B,KAAK,QAJP,SAME,cAAC,IAAD,MAEF,eAACsC,EAAA,EAAD,WACE,eAAC5C,EAAA,EAAD,CAAYD,UAAWF,EAAQgB,EAAMrD,UAAWqF,cAAY,EAA5D,uBACahC,EAAMrD,SAAWqD,EAAMrD,SAAW,mBAE/C,cAACwC,EAAA,EAAD,CAAY8C,GAAI,CAAEpD,SAAU,IAAMmD,cAAY,EAA9C,SACGhC,EAAMzD,MAAQyD,EAAMzD,MAAQ,aAE/B,cAAC4C,EAAA,EAAD,CAAYD,UAAWF,EAAQxC,YAAa0F,UAAU,UAAtD,SACGlC,EAAMxD,YAAcwD,EAAMxD,YAAc,sBAG7C,eAAC2F,EAAA,EAAD,WAGmB,MAAhBpB,EACC,mCACE,cAACc,EAAA,EAAD,CACE3C,UAAWF,EAAQwB,UACnBsB,QAAS,kBAAMb,EAAW,SAC1BxB,KAAK,QAHP,SAKE,cAAC,IAAD,QAGF,KACa,MAAhBsB,EACC,mCACE,cAACc,EAAA,EAAD,CACE3C,UAAWF,EAAQqB,WACnByB,QAAS,kBAAMb,EAAW,UAC1BxB,KAAK,QAHP,SAKE,cAAC,IAAD,QAGF,KACa,MAAhBsB,EACC,qCACE,cAACc,EAAA,EAAD,CACE3C,UAAWF,EAAQwB,UACnBsB,QAAS,kBAAMb,EAAW,SAC1BxB,KAAK,QAHP,SAKE,cAAC,IAAD,MAEF,cAACoC,EAAA,EAAD,CACE3C,UAAWF,EAAQqB,WACnByB,QAAS,kBAAMb,EAAW,UAC1BxB,KAAK,QAHP,SAKE,cAAC,IAAD,SAGF,c,0FC/HG,SAAS2C,EAAMpC,GAC5B,MAAwBc,oBAAS,GAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KACA,EAA0BxB,qBAA1B,mBAAOvE,EAAP,KAAcgG,EAAd,KACA,EAAsCzB,qBAAtC,mBAAOtE,EAAP,KAAoBgG,EAApB,KACA,EAAgC1B,qBAAhC,mBAAOnE,EAAP,KAAiB8F,EAAjB,KAEMC,EAAc,WAClBJ,GAAQ,GACRtC,EAAM2C,aAAapG,EAAOC,EAAaG,GACvC4F,IACAC,IACAC,KAGF,OACE,8BACE,eAACG,EAAA,EAAD,CACEP,KAAMA,EACNQ,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBxB,GAAG,2BAAtB,SACGvB,EAAMgD,cAGX,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEpG,KAAK,OACLP,MAAM,YACN4G,SAAS,OACTzD,YAAaM,EAAMzD,MACnB6G,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,UAErC,cAACL,EAAA,EAAD,CACEpG,KAAK,OACLP,MAAM,YACN4G,SAAS,OACTzD,YAAaM,EAAMxD,YACnB4G,SAAU,SAACC,GAAD,OAAOb,EAAea,EAAEC,OAAOC,UAE1CvD,EAAMwD,QACL,qCACE,cAACC,EAAA,EAAD,CAAYlC,GAAG,oCAAf,sBAGF,cAACmC,EAAA,EAAD,CAAajE,KAAK,SAASL,QAAQ,WAAW6C,GAAI,CAAE0B,EAAG,EAAGC,SAAU,KAApE,SACE,eAACC,EAAA,EAAD,CACEV,UAAQ,EACRW,QAAQ,oCACRvC,GAAG,8BACH6B,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOC,QACtCQ,MAAM,WALR,UAOE,cAACC,EAAA,EAAD,CAAUT,MAAOvD,EAAMwD,QAAQ,GAA/B,SAAoCxD,EAAMwD,QAAQ,KAClD,cAACQ,EAAA,EAAD,CAAUT,MAAOvD,EAAMwD,QAAQ,GAA/B,SAAoCxD,EAAMwD,QAAQ,KAClD,cAACQ,EAAA,EAAD,CAAUT,MAAOvD,EAAMwD,QAAQ,GAA/B,SAAoCxD,EAAMwD,QAAQ,aAIpD,KACJ,cAACS,EAAA,EAAD,CAAQnC,QAASY,EAAa5D,MAAM,UAAUoF,WAAS,EAAvD,SACGlE,EAAMmE,sB,qBChEbpG,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,UAAW,CACTI,OAAQ,GACRH,MAAO,IACPyF,SAAU,IACVxF,OAAQ,OACRC,gBAAiB,wBACjB+F,cAAe,SACf1D,SAAU,SACV2D,aAAc,GAEhBC,aAAc,CACZ9F,QAAS,QACT0B,SAAU,WACVV,QAAS,EACT+E,KAAM,GACNhE,OAAQ,IAEViE,cAAY,GACVhG,QAAS,OACT4F,cAAe,SACf3F,eAAgB,eAChBe,QAAS,EACTlB,OAAQ,OACR+F,aAAc,GANJ,wBAOD,GAPC,6BAQI,IARJ,0BASC,IATD,gCAUO,yBAVP,yBAWA,UAXA,0BAYC,KAZD,GAcZpE,cAAe,CACbS,SAAU,SACVlB,QAAS,GAEXiF,YAAa,CACXC,UAAW,SACXC,UAAW,GACX9F,SAAU,IAEZ+F,kBAAmB,CACjBF,UAAW,SACXC,UAAW,GACX9F,SAAU,QA+Gd,IAWec,gBALS,SAACxC,GAAD,MAAY,CAClC0C,KAAM1C,EAAMD,cAAcZ,MAC1BsD,MAAOzC,EAAMM,YAAYnB,UARA,SAACwD,GAAD,MAAe,CACxC+E,aAAc,SAAChI,GAAD,OAAUiD,EP5HE,SAACjD,GAC3B,MAAO,CACLC,KAAM,gBACNC,QAASF,GOyHsBgI,CAAahI,KAC9CiI,QAAS,SAACjI,GAAD,OAAUiD,EN/HZ,CACLhD,KAAM,WACNC,QM6HkCF,KACpCD,SAAU,SAACC,GAAD,OAAUiD,EAASlD,EAASC,QAQzB8C,EAtHf,SAAgBK,GACd,MAAoDc,oBAAS,GAA7D,mBAAOiE,EAAP,KAA2BC,EAA3B,KACMhG,EAAUjB,IA8ChB,OACE,eAACkB,EAAA,EAAD,CAAWC,UAAWF,EAAQd,UAA9B,UACE,eAACe,EAAA,EAAD,CAAWC,UAAWF,EAAQwF,aAA9B,UACE,cAAC3C,EAAA,EAAD,CACEpC,KAAK,QACLP,UAAWF,EAAQsF,aACnBxC,QAAS,kBAlDI,SAACP,GAEpB,IAAI0D,EAAQjF,EAAMJ,MAAMtC,QAAO,SAAC4H,GAAD,OAAUA,EAAKxI,YAAc6E,KAExDJ,EAAYnB,EAAMH,KAAKrC,KAAI,SAAC4D,GAAD,OAAYA,EAAO3E,OAGlD,GAAqB,IAAjBwI,EAAMxD,OAAc,CACtB,IAAIJ,EAAQ4D,EAAQ9D,EAAUG,QAAQ2D,EAAM,GAAGvI,WAAa,KAC5D,GAAyB,IAArByE,EAAUM,QAIZ,GAA+B,OAHhB0D,OACb,uDAEWC,cACX,YAEO/D,IAAUF,EAAUM,OAAS,EACtCwD,EAAMzH,KAAI,SAACX,GACTA,EAAKH,UAAYyE,EAAUE,EAAQ,GACnCrB,EAAMpD,SAASC,MAERwE,EAAQF,EAAUM,OAAS,GACpCwD,EAAMzH,KAAI,SAACX,GACTA,EAAKH,UAAYyE,EAAUE,EAAQ,GACnCrB,EAAMpD,SAASC,MAIrBmD,EAAM6E,aAAatD,GAsBE8D,CAAarF,EAAMuB,KAHpC,SAKE,cAAC,IAAD,MAEF,cAACpC,EAAA,EAAD,CAAYD,UAAWF,EAAQyF,YAAavC,UAAU,IAAtD,SACGlC,EAAMzD,MAAQyD,EAAMzD,MAAQ,aAE/B,cAAC4C,EAAA,EAAD,CAAYD,UAAWF,EAAQ4F,kBAAmB1C,UAAU,IAA5D,SACGlC,EAAMxD,YAAcwD,EAAMxD,YAAc,mBAE3C,cAACyH,EAAA,EAAD,CACExE,KAAK,SACLL,QAAQ,WACRkG,UAAW,cAAC,IAAD,IACXxD,QAAS,kBAAMkD,GAAsB,IAJvC,yBAUDD,EACC,cAAC3C,EAAD,CACEY,UAAU,oBACVL,aA1Ca,SAACpG,EAAOC,EAAaG,GACxCqI,GAAsB,GAEtB,IAAIO,EAAU,CACZ9I,IAAK+I,cACLjJ,QACAC,cACAG,WACAD,UAAWsD,EAAMuB,IAEnBvB,EAAM8E,QAAQS,IAiCRhJ,MAAM,YACNC,YAAY,cACZgH,QAAS,CAAC,MAAO,SAAU,QAC3BW,YAAY,WAEZ,KACJ,cAAClF,EAAA,EAAD,CAAWC,UAAWF,EAAQiB,cAA9B,SACGD,EAAMJ,MACHI,EAAMJ,MACHtC,QAAO,SAACT,GAAD,OAAUA,EAAKH,YAAcsD,EAAMuB,MAC1C/D,KAAI,SAACiI,GACJ,OACE,cAAC,EAAD,CACE7D,UAAU,OAEVL,GAAIkE,EAAahJ,IACjBC,UAAW+I,EAAa/I,UACxBH,MAAOkJ,EAAalJ,MACpBC,YAAaiJ,EAAajJ,YAC1BG,SAAU8I,EAAa9I,UALlB8I,EAAahJ,QAS1B,aCxJNsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTM,QAAS,OACT4F,cAAe,MACfjG,MAAO,OACPC,OAAQ,OACRC,gBAAiB,sBACjBqC,SAAU,cAiDd,IAQef,gBAJS,SAACxC,GAAD,MAAY,CAClC0C,KAAM1C,EAAMD,cAAcZ,UALD,SAACwD,GAAD,MAAe,CACxC4F,UAAW,SAAC7I,GAAD,OAAUiD,ER7BE,SAACjD,GACxB,MAAO,CACLC,KAAM,aACNC,QAASF,GQ0BmB6I,CAAU7I,QAO3B8C,EArDf,SAAeK,GACb,MAA0Cc,oBAAS,GAAnD,mBAAO6E,EAAP,KAAsBC,EAAtB,KACM5G,EAAUjB,KAahB,OACE,eAACkB,EAAA,EAAD,CAAWC,UAAWF,EAAQd,UAA9B,UACGyH,EACC,cAACvD,EAAD,CACEY,UAAU,aACVL,aAhBa,SAACpG,EAAOC,GAC3BoJ,GAAiB,GAEjB,IAAIC,EAAY,CACdpJ,IAAK+I,cACLjJ,QACAC,eAEFwD,EAAM0F,UAAUG,IASVtJ,MAAM,cACNC,YAAY,cACZ2H,YAAY,WAEZ,KACHnE,EAAMH,KACHG,EAAMH,KAAKrC,KAAI,SAACX,GACd,OACE,cAAC,GAAD,CAEE0E,GAAI1E,EAAKJ,IACTF,MAAOM,EAAKN,MACZC,YAAaK,EAAKL,aAHbK,EAAKJ,QAOhB,KACJ,cAACwH,EAAA,EAAD,CAAQ1H,MAAM,eAAekD,KAAK,QAAQqC,QAAS,kBAAM8D,GAAiB,IAA1E,8B,MC1CSE,OAVf,SAAa9F,GACX,OACE,sBAAKuB,GAAG,MAAR,UACE,cAAC,EAAD,IACA,cAAC,GAAD,CAAOA,GAAG,UACV,cAAC,EAAD,Q,OCHN,SAASwE,KACP,OACE,cAAC,IAAD,CAAUrI,MAAOA,EAAjB,SACE,cAAC,GAAD,MAKN,IAAM2B,GAAO2G,SAASC,eAAe,QACrCC,IAASC,OACP,cAAC,IAAD,UACE,cAACJ,GAAD,MAEF1G,K","file":"static/js/main.dd90e1db.chunk.js","sourcesContent":["let initialState = {\n  items: [\n    {\n      title: \"Test Column 1\",\n      description: \"This is a description of the column\",\n      _id: \"snm,dbflkwufha;hLKGkjhFGV\",\n    },\n    {\n      title: \"Test Column 2\",\n      description: \"This is another description of the column\",\n      _id: \"FDSDGJHSFKLGb&T^*^&*\",\n    },\n  ],\n};\n\nexport default function columnReducer(state = initialState, action) {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"ADD_COLUMN\":\n      return {\n        items: [...state.items, payload],\n      };\n\n    case \"REMOVE_COLUMN\":\n      let newItems = state.items.filter((item) => item._id !== payload);\n      return { ...state, items: newItems };\n\n    case \"MODIFY_COLUMN\":\n      let updatedItems = state.items.map((item) =>\n        item._id === payload._id ? (item = payload) : null\n      );\n      return { ...state, items: updatedItems };\n\n    default:\n      return state;\n  }\n}\n\nexport const addColumn = (item) => {\n  return {\n    type: \"ADD_COLUMN\",\n    payload: item,\n  };\n};\n\nexport const deleteColumn = (item) => {\n  return {\n    type: \"REMOVE_COLUMN\",\n    payload: item,\n  };\n};\n\nexport const updateColumn = (item) => {\n  return {\n    type: \"MODIFY_COLUMN\",\n    payload: item,\n  };\n};\n","let initialState = {\n  items: [\n    {\n      title: \"Column 1 CARD 1\",\n      description: \"This is the description for this card.\",\n      column_id: \"snm,dbflkwufha;hLKGkjhFGV\",\n      _id: \"nabdslakgailDGUwaukev\",\n      priority: \"High\",\n    },\n    {\n      title: \"Column 2 CARD 1\",\n      description: \"This is the description for this card.\",\n      column_id: \"FDSDGJHSFKLGb&T^*^&*\",\n      _id: \"samnhedvkuDFKVCWA\",\n      priority: \"Low\",\n    },\n  ],\n};\n\nexport default function cardReducer(state = initialState, action) {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"ADD_CARD\":\n      return {\n        items: [...state.items, payload],\n      };\n\n    case \"REMOVE_CARD\":\n      let newItems = state.items.filter((item) => item._id !== payload);\n      return { ...state, items: newItems };\n\n    case \"MOVE_CARD\":\n      let updatedItems = state.items.map((item) =>\n        item._id === payload[0] ? { ...item, column_id: payload[1] } : item\n      );\n      return { ...state, items: updatedItems };\n\n    default:\n      return state;\n  }\n}\n\nexport const addCard = (name) => {\n  return {\n    type: \"ADD_CARD\",\n    payload: name,\n  };\n};\n\nexport const deleteCard = (id) => {\n  return {\n    type: \"REMOVE_CARD\",\n    payload: id,\n  };\n};\n\nexport const moveCard = (item) => {\n  return {\n    type: \"MOVE_CARD\",\n    payload: item,\n  };\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport columnReducer from \"./column.js\";\nimport cardReducer from \"./card.js\";\n\nlet reducers = combineReducers({\n  columnReducer,\n  cardReducer,\n});\nconst store = () => {\n  return createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n};\n\nexport default store();\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\n  container: {\n    width: \"90vw\",\n    height: 100,\n    backgroundColor: \"none\",\n    margin: \"0 auto\",\n  },\n  headerText: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"2vh\",\n    fontWeight: \"bolder\",\n    textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n    fontSize: 50,\n    color: \"#002766\",\n  },\n}));\n\nexport default function Board() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h4\" className={classes.headerText}>\n        Project Board\n      </Typography>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container, Button, rgbToHex } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"75ch\",\n    },\n  },\n  container: {\n    width: \"90vw\",\n    height: \"10vh\",\n    backgroundColor: \"none\",\n  },\n  text: {\n    padding: 20,\n    size: \"30px\",\n    color: \"#002766\",\n  },\n}));\n\nexport default function Board() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Typography className={classes.text} placeholder=\"Enter Some Text\">\n        © Dan Engel, 2021\n      </Typography>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteCard, moveCard } from \"../../store/card.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction BasicCard(props) {\n  const useStyles = makeStyles((theme) => ({\n    cardContainer: {\n      backgroundColor: \"rgba(245,245,245,0.9)\",\n      margin: 0,\n      padding: 0,\n      position: \"relative\",\n      marginBottom: 10,\n      paddingBottom: 10,\n    },\n    rightArrow: {\n      position: \"absolute\",\n      bottom: 5,\n      right: 5,\n    },\n    leftArrow: {\n      position: \"absolute\",\n      bottom: 5,\n      left: 5,\n    },\n    description: {\n      overflow: \"scroll\",\n    },\n    High: {\n      color: 'red'\n    },\n    Medium: {\n      color: 'orange'\n    },\n    Low: {\n      color: 'green'\n    }\n  }));\n\n  const [moveButtons, setMoveButtons] = useState();\n  const classes = useStyles();\n\n  const removeCard = (id) => {\n    props.deleteCard(id);\n  };\n\n  const modifyCard = (direction) => {\n    let columnIds = props.data.map((column) => column._id);\n    let index = columnIds.indexOf(props.column_id);\n    if (direction === \"right\") props.moveCard([props.id, columnIds[index + 1]]);\n    else props.moveCard([props.id, columnIds[index - 1]]);\n  };\n\n  // determine column position on board and set state so that the move arrows can be rendered dynamically\n  // if the column is on the left side, this prevents adding a left arrow and same with the right side\n  const loadButtons = () => {\n    let columnIds = props.data.map((column) => column._id);\n    let index = columnIds.indexOf(props.column_id);\n    if (columnIds.length === 1) return setMoveButtons(null);\n    if (index === 0 && columnIds.length > 1) return setMoveButtons(\"0\");\n    if (index === columnIds.length - 1) return setMoveButtons(\"1\");\n    else setMoveButtons(\"2\");\n  };\n\n  useEffect(() => {\n    loadButtons();\n  });\n\n  return (\n    <Card draggable='true'className={classes.cardContainer} id={props.id}>\n      <IconButton\n        onClick={() => {\n          removeCard(props.id);\n        }}\n        size=\"small\"\n      >\n        <CloseIcon />\n      </IconButton>\n      <CardContent>\n        <Typography className={classes[props.priority]} gutterBottom>\n          Priority: {props.priority ? props.priority : 'none selected'}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} gutterBottom>\n          {props.title ? props.title : 'no title'}\n        </Typography>\n        <Typography className={classes.description} component=\"section\">\n          {props.description ? props.description : 'no description'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {/* render the move buttons based on the moveButtons state. \n        There is probably a more elegant way to do this rather than three separate ternary operators */}\n        {moveButtons === \"1\" ? (\n          <>\n            <IconButton\n              className={classes.leftArrow}\n              onClick={() => modifyCard(\"left\")}\n              size=\"small\"\n            >\n              <ArrowBackIosNewIcon />\n            </IconButton>\n          </>\n        ) : null}\n        {moveButtons === \"0\" ? (\n          <>\n            <IconButton\n              className={classes.rightArrow}\n              onClick={() => modifyCard(\"right\")}\n              size=\"small\"\n            >\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </>\n        ) : null}\n        {moveButtons === \"2\" ? (\n          <>\n            <IconButton\n              className={classes.leftArrow}\n              onClick={() => modifyCard(\"left\")}\n              size=\"small\"\n            >\n              <ArrowBackIosNewIcon />\n            </IconButton>\n            <IconButton\n              className={classes.rightArrow}\n              onClick={() => modifyCard(\"right\")}\n              size=\"small\"\n            >\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </>\n        ) : null}\n      </CardActions>\n    </Card>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  moveCard: (item) => dispatch(moveCard(item)),\n  deleteCard: (item) => dispatch(deleteCard(item)),\n});\n\nconst mapStateToProps = (state) => ({\n  tasks: state.cardReducer.items,\n  data: state.columnReducer.items,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicCard);\n","import React, { useState } from \"react\";\n\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nexport default function Modal(props) {\n  const [open, setOpen] = useState(true);\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [priority, setPriority] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n    props.handleSubmit(title, description, priority);\n    setTitle();\n    setDescription();\n    setPriority();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.innerText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <TextField\n            type=\"text\"\n            title='inputName'\n            required='true'\n            placeholder={props.title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <TextField\n            type=\"text\"\n            title='inputDesc'\n            required='true'\n            placeholder={props.description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n          {props.options ? (\n            <>\n              <InputLabel id=\"demo-simple-select-standard-label\">\n                Priority\n              </InputLabel>\n            <FormControl size=\"medium\" variant=\"standard\" sx={{ m: 1, minWidth: 300 }}>\n              <Select\n                required\n                labelId=\"demo-simple-select-standard-label\"\n                id=\"demo-simple-select-standard\"\n                onChange={(e) => setPriority(e.target.value)}\n                label=\"Priority\"\n              >\n                <MenuItem value={props.options[0]}>{props.options[0]}</MenuItem>\n                <MenuItem value={props.options[1]}>{props.options[1]}</MenuItem>\n                <MenuItem value={props.options[2]}>{props.options[2]}</MenuItem>\n              </Select>\n            </FormControl>\n            </>\n          ) : null}\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            {props.buttonTitle}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { deleteColumn } from \"../../store/column.js\";\nimport { addCard, moveCard } from \"../../store/card.js\";\nimport Card from \"../card/card.js\";\nimport Modal from \"../modal/modal\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container, Button, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: 10,\n    width: 250,\n    minWidth: 250,\n    height: \"75vh\",\n    backgroundColor: \"rgba(235,235,235,0.3)\",\n    flexDirection: \"column\",\n    overflow: \"scroll\",\n    borderRadius: 5,\n  },\n  deleteButton: {\n    display: \"block\",\n    position: \"absolute\",\n    padding: 0,\n    top: -20,\n    right: -25,\n  },\n  columnHeader: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    padding: 0,\n    margin: \"auto\",\n    borderRadius: 5,\n    padding: 5,\n    marginBottom: 10,\n    marginTop: 20,\n    backgroundColor: \"rgba(255,255,255,0.1)\",\n    position: \"sticky\",\n    minHeight: 170\n  },\n  cardContainer: {\n    overflow: \"scroll\",\n    padding: 0,\n  },\n  columnTitle: {\n    textAlign: 'center',\n    minHeight: 25, \n    fontSize: 20\n  },\n  columnDescription: {\n    textAlign: 'center',\n    minHeight: 40, \n    fontSize: 12\n  }\n}));\n\nfunction Column(props) {\n  const [newCardModalIsOpen, setNewCardModalIsOpen] = useState(false);\n  const classes = useStyles();\n\n  const removeColumn = (id) => {\n    // find all cards with the column id of the column to delete\n    let cards = props.tasks.filter((task) => task.column_id === id);\n    // find all the column ids so we determine if the cards should move forward, backward or if there is only one column and the cards will be lost\n    let columnIds = props.data.map((column) => column._id);\n\n    // determine where the deleted columns cards should be moved before deleting the column\n    if (cards.length !== 0) {\n      let index = cards ? columnIds.indexOf(cards[0].column_id) : null;\n      if (columnIds.length === 1) {\n        let response = prompt(\n          \"You sure about that? All of your tasks will be lost\"\n        );\n        if (response.toLowerCase() === \"no\") {\n          return;\n        }\n      } else if (index === columnIds.length - 1) {\n        cards.map((item) => {\n          item.column_id = columnIds[index - 1];\n          props.moveCard(item);\n        });\n      } else if (index < columnIds.length - 1) {\n        cards.map((item) => {\n          item.column_id = columnIds[index + 1];\n          props.moveCard(item);\n        });\n      }\n    }\n    props.deleteColumn(id);\n  };\n\n  const handleSubmit = (title, description, priority) => {\n    setNewCardModalIsOpen(false);\n    // create new card object and send it to the Card Store\n    let newCard = {\n      _id: uuidv4(),\n      title,\n      description,\n      priority,\n      column_id: props.id,\n    };\n    props.addCard(newCard);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Container className={classes.columnHeader}>\n        <IconButton\n          size=\"small\"\n          className={classes.deleteButton}\n          onClick={() => removeColumn(props.id)}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography className={classes.columnTitle} component=\"p\">\n          {props.title ? props.title : 'no title'}\n        </Typography>\n        <Typography className={classes.columnDescription} component=\"p\">\n          {props.description ? props.description : 'no description'}\n        </Typography>\n        <Button\n          size=\"medium\"\n          variant=\"standard\"\n          startIcon={<AddIcon />}\n          onClick={() => setNewCardModalIsOpen(true)}\n        >\n          Add Task\n        </Button>\n      </Container>\n\n      {newCardModalIsOpen ? (\n        <Modal\n          innerText=\"Create A New Task\"\n          handleSubmit={handleSubmit}\n          title=\"Task Name\"\n          description=\"Description\"\n          options={[\"Low\", \"Medium\", \"High\"]}\n          buttonTitle=\"Submit\"\n        />\n      ) : null}\n      <Container className={classes.cardContainer}>\n        {props.tasks\n          ? props.tasks\n              .filter((item) => item.column_id === props.id)\n              .map((filteredTask) => {\n                return (\n                  <Card\n                    draggable=\"true\"\n                    key={filteredTask._id}\n                    id={filteredTask._id}\n                    column_id={filteredTask.column_id}\n                    title={filteredTask.title}\n                    description={filteredTask.description}\n                    priority={filteredTask.priority}\n                  />\n                );\n              })\n          : null}\n      </Container>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteColumn: (item) => dispatch(deleteColumn(item)),\n  addCard: (item) => dispatch(addCard(item)),\n  moveCard: (item) => dispatch(moveCard(item)),\n});\n\nconst mapStateToProps = (state) => ({\n  data: state.columnReducer.items,\n  tasks: state.cardReducer.items,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Column);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { addColumn } from \"../../store/column.js\";\nimport Column from \"../column/column.js\";\nimport Modal from \"../modal/modal.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"90vw\",\n    height: \"80vh\",\n    backgroundColor: \"rgba(255,0,255,0.2)\",\n    overflow: \"scroll\",\n  },\n}));\n\nfunction Board(props) {\n  const [modalIsActive, setModalIsActive] = useState(false);\n  const classes = useStyles();\n\n  const handleSubmit = (title, description) => {\n    setModalIsActive(false);\n    // create a new column for the users input and send to the Store\n    let newColumn = {\n      _id: uuidv4(),\n      title,\n      description,\n    };\n    props.addColumn(newColumn);\n  };\n\n  return (\n    <Container className={classes.container}>\n      {modalIsActive ? (\n        <Modal\n          innerText=\"New Column\"\n          handleSubmit={handleSubmit}\n          title=\"Column Name\"\n          description=\"Description\"\n          buttonTitle=\"Submit\"\n          />\n      ) : null}\n      {props.data\n        ? props.data.map((item) => {\n            return (\n              <Column\n                key={item._id}\n                id={item._id}\n                title={item.title}\n                description={item.description}\n              />\n            );\n          })\n        : null}\n      <Button title='addColumnBtn' size=\"small\" onClick={() => setModalIsActive(true)}>\n        Add Column\n      </Button>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addColumn: (item) => dispatch(addColumn(item)),\n});\n\nconst mapStateToProps = (state) => ({\n  data: state.columnReducer.items,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from \"react\";\n\nimport Header from \"./components/header.js\";\nimport Footer from \"./components/footer.js\";\nimport Board from \"./components/board/board.js\";\n\nimport \"./style/app.css\";\n\nfunction App(props) {\n  return (\n    <div id=\"app\">\n      <Header />\n      <Board id=\"board\" />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./store/index.js\";\nimport App from \"./app.js\";\n\nimport \"./style/reset.css\";\n\nfunction Entry() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nconst root = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <Entry />\n  </BrowserRouter>,\n  root\n);\n"],"sourceRoot":""}